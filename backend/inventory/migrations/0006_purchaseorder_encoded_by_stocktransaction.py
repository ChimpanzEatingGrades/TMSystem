# Generated by Django 5.2.5 on 2025-09-20 02:38

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0005_rawmaterial_uniq_rawmaterial_name_ci'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='purchaseorder',
            name='encoded_by',
            field=models.ForeignKey(blank=True, help_text='User who created this purchase order', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='StockTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('stock_in', 'Stock In'), ('stock_out', 'Stock Out'), ('adjustment', 'Adjustment')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Quantity moved (positive for stock in, negative for stock out)', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))])),
                ('unit', models.CharField(help_text='Unit of measurement', max_length=50)),
                ('reference_number', models.CharField(blank=True, help_text='Reference to purchase order, stock out form, etc.', max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(blank=True, help_text='User who performed this transaction', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_transactions', to=settings.AUTH_USER_MODEL)),
                ('raw_material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_transactions', to='inventory.rawmaterial')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['raw_material', 'created_at'], name='inventory_s_raw_mat_a6842f_idx'), models.Index(fields=['transaction_type', 'created_at'], name='inventory_s_transac_fce13a_idx'), models.Index(fields=['performed_by', 'created_at'], name='inventory_s_perform_00a9e7_idx')],
            },
        ),
    ]
